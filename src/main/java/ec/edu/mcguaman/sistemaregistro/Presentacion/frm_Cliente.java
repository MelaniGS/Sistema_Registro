/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ec.edu.mcguaman.sistemaregistro.Presentacion;

import ec.edu.mcguaman.sistemaregistro.Negocio.ClienteServicio;
import ec.edu.mcguaman.sistemaregistro.Negocio.PersonaServicio;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Fidelidad;
import modelo.Persona;

/**
 *
 * @author ASUS
 */
public class frm_Cliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form persona_frm
     */
    private ClienteServicio servicio;
    private DefaultTableModel modelo;
    private List<Cliente> listadoClientes;
    private DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

    public frm_Cliente() {
        initComponents();
        servicio = new ClienteServicio();
        listarYMostrar();
    }

    private void listarYMostrar() {
        listadoClientes = servicio.listarClientes();
        mostrarDatos(listadoClientes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_correo = new javax.swing.JTextField();
        butt_agregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_clientes = new javax.swing.JTable();
        butt_eliminar = new javax.swing.JButton();
        butt_actualizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btn_limpiar = new javax.swing.JButton();
        txt_fecha = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        txt_apellido = new javax.swing.JTextField();
        txt_cedula = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_direccion = new javax.swing.JTextField();
        checkBox_afilicacion = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Sistema Registro");

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apellido:");

        jLabel3.setText("Correo:");

        jLabel4.setText("Telefono:");

        jLabel5.setText("Fecha Nacimiento (dd-mm-yyyy):");

        jLabel6.setText("Cedula:");

        txt_correo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        butt_agregar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        butt_agregar.setText("Agregar");
        butt_agregar.setBorder(null);
        butt_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_agregarActionPerformed(evt);
            }
        });

        tbl_clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbl_clientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_clientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_clientes);

        butt_eliminar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        butt_eliminar.setText("Eliminar");
        butt_eliminar.setBorder(null);
        butt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_eliminarActionPerformed(evt);
            }
        });

        butt_actualizar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        butt_actualizar.setText("Actualizar");
        butt_actualizar.setBorder(null);
        butt_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_actualizarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel7.setText("SISTEMA REGISTRO CLIENTE");

        btn_limpiar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_limpiar.setText("Limpiar");
        btn_limpiar.setBorder(null);
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        txt_fecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fechaKeyPressed(evt);
            }
        });

        txt_nombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreKeyTyped(evt);
            }
        });

        txt_apellido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_apellidoKeyTyped(evt);
            }
        });

        txt_cedula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cedulaKeyTyped(evt);
            }
        });

        txt_telefono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_telefonoKeyTyped(evt);
            }
        });

        jLabel8.setText("Direcci√≥n:");

        txt_direccion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_direccionKeyTyped(evt);
            }
        });

        checkBox_afilicacion.setText("Desea Afiliarse");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(butt_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(butt_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(butt_actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jLabel1))
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6)
                                .addComponent(jLabel3)
                                .addComponent(txt_nombre)
                                .addComponent(txt_apellido)
                                .addComponent(txt_cedula)
                                .addComponent(txt_telefono)
                                .addComponent(txt_correo, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                .addComponent(txt_fecha))
                            .addComponent(jLabel5)))
                    .addComponent(jLabel8)
                    .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBox_afilicacion))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(153, 153, 153))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBox_afilicacion)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(butt_agregar)
                            .addComponent(butt_eliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_limpiar)
                            .addComponent(butt_actualizar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mostrarDatos(List<Cliente> lista) {
        modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("C√©dula");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Correo");
        modelo.addColumn("Fecha Nac.");
        modelo.addColumn("Edad");
        modelo.addColumn("Tel√©fono");
        modelo.addColumn("Direcci√≥n");

        for (Cliente c : lista) {
            Object[] fila = {
                c.getId(),
                c.getCedula(),
                c.getNombre(),
                c.getApellido(),
                c.getCorreo(),
                c.getFecha_nacimiento().format(formatter),
                c.getEdad(),
                c.getTelefono(),
                c.getDireccion()
            };
            modelo.addRow(fila);
        }
        tbl_clientes.setModel(modelo);
    }

    private void llenarFormularioDesdeTabla() {
        int idx = tbl_clientes.getSelectedRow();
        if (idx < 0) {
            return;
        }
        Cliente c = listadoClientes.get(idx);
        txt_nombre.setText(c.getNombre());
        txt_apellido.setText(c.getApellido());
        txt_cedula.setText(c.getCedula());
        txt_correo.setText(c.getCorreo());
        txt_telefono.setText(c.getTelefono());
        txt_fecha.setText(c.getFecha_nacimiento().format(formatter));
        txt_direccion.setText(c.getDireccion());
        checkBox_afilicacion.setSelected(c.getFidelidad() != null);
    }

    private void limpiarFormulario() {
        txt_nombre.setText("");
        txt_apellido.setText("");
        txt_cedula.setText("");
        txt_correo.setText("");
        txt_telefono.setText("");
        txt_fecha.setText("");
        txt_direccion.setText("");
        checkBox_afilicacion.setSelected(false);
    }

    private void butt_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_agregarActionPerformed
        if (!validarFormulario()) {
            JOptionPane.showMessageDialog(this,
                    "Complete los campos obligatorios.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            LocalDate fecha = LocalDate.parse(txt_fecha.getText().trim(), formatter);
            Cliente cli = new Cliente(
                    txt_nombre.getText().trim(),
                    txt_apellido.getText().trim(),
                    txt_correo.getText().trim(),
                    txt_telefono.getText().trim(),
                    fecha,
                    txt_cedula.getText().trim(),
                    txt_direccion.getText().trim()
            );
            if (checkBox_afilicacion.isSelected()) {
                cli.setFidelidad(new Fidelidad(cli, 0, 0, LocalDate.now()));
            }
            int res = servicio.agregarCliente(cli);
            switch (res) {
                case 1 ->
                    JOptionPane.showMessageDialog(this,
                            "Cliente registrado.",
                            "Informaci√≥n",
                            JOptionPane.INFORMATION_MESSAGE);
                case 0 ->
                    JOptionPane.showMessageDialog(this,
                            "C√©dula ya registrada.",
                            "Advertencia",
                            JOptionPane.WARNING_MESSAGE);
                case 2 ->
                    JOptionPane.showMessageDialog(this,
                            "Error interno.",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                case 3 ->
                    JOptionPane.showMessageDialog(this,
                            "Solo mayores de edad.",
                            "Advertencia",
                            JOptionPane.WARNING_MESSAGE);
            }
            listarYMostrar();
            limpiarFormulario();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Fecha inv√°lida.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_butt_agregarActionPerformed

    private void butt_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_actualizarActionPerformed
        int idx = tbl_clientes.getSelectedRow();
        if (idx < 0) {
            return;
        }
        if (!validarFormulario()) {
            JOptionPane.showMessageDialog(this,
                    "Complete los campos obligatorios.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            LocalDate fecha = LocalDate.parse(txt_fecha.getText().trim(), formatter);
            Cliente cli = new Cliente(
                    txt_nombre.getText().trim(),
                    txt_apellido.getText().trim(),
                    txt_correo.getText().trim(),
                    txt_telefono.getText().trim(),
                    fecha,
                    txt_cedula.getText().trim(),
                    txt_direccion.getText().trim()
            );
            cli.setId(listadoClientes.get(idx).getId());
            if (checkBox_afilicacion.isSelected()) {
                cli.setFidelidad(new Fidelidad(cli, 0, 0, LocalDate.now()));
            }
            boolean ok = servicio.actualizarCliente(cli);
            JOptionPane.showMessageDialog(this,
                    ok ? "Registro actualizado." : "Error al actualizar.",
                    "Informaci√≥n",
                    ok ? JOptionPane.INFORMATION_MESSAGE : JOptionPane.ERROR_MESSAGE);
            listarYMostrar();
            limpiarFormulario();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Fecha inv√°lida.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_butt_actualizarActionPerformed

    private void butt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_eliminarActionPerformed
        int idx = tbl_clientes.getSelectedRow();
        if (idx < 0) {
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(
                this,
                "¬øEst√°s seguro de eliminar este cliente?",
                "Confirmar eliminaci√≥n",
                JOptionPane.YES_NO_OPTION
        );
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Obtengo el ID desde la lista
        int idCliente = listadoClientes.get(idx).getId();
        boolean ok = servicio.eliminarCliente(idCliente);

        JOptionPane.showMessageDialog(
                this,
                ok ? "Cliente eliminado." : "Error al eliminar.",
                "Informaci√≥n",
                ok ? JOptionPane.INFORMATION_MESSAGE : JOptionPane.ERROR_MESSAGE
        );
        listarYMostrar();
        limpiarFormulario();
    }//GEN-LAST:event_butt_eliminarActionPerformed

    public void desactivarAgregar(boolean activo) {
        if (activo) {
            butt_agregar.setEnabled(false);
        } else {
            butt_agregar.setEnabled(true);
        }
    }

    private void tbl_clientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_clientesMouseClicked
        llenarFormularioDesdeTabla();
    }//GEN-LAST:event_tbl_clientesMouseClicked

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        limpiarFormulario();
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void txt_fechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fechaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            return;
        }
        char caracter = evt.getKeyChar();
        if ((caracter < '0' || caracter > '9') && caracter != '-') {
            evt.consume();  // Si no es un n√∫mero ni una raya, se descarta el evento
            JOptionPane.showMessageDialog(null, "Error: Solo se permiten n√∫meros y el car√°cter '-'.", "Car√°cter no v√°lido", JOptionPane.ERROR_MESSAGE);
        }
        if (txt_fecha.getText().length() >= 10) {
            evt.consume();  // Si se superan los 10 caracteres, se descarta el evento
            JOptionPane.showMessageDialog(null, "Error: La fecha debe tener exactamente 10 caracteres.", "L√≠mite de caracteres excedido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_fechaKeyPressed

    private void txt_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyTyped
        ValidarCaracteres(evt);
    }//GEN-LAST:event_txt_nombreKeyTyped

    private void txt_apellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_apellidoKeyTyped
        ValidarCaracteres(evt);
    }//GEN-LAST:event_txt_apellidoKeyTyped

    private void txt_cedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cedulaKeyTyped
        char c = evt.getKeyChar();

        if (Character.isISOControl(c)) {
            return;
        }
        if (!Character.isDigit(c)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Error: S√≥lo se permiten d√≠gitos en la c√©dula.", "Car√°cter no v√°lido", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txt_cedula.getText().length() >= 10) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Error: La c√©dula debe tener como m√°ximo 10 d√≠gitos.", "L√≠mite excedido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_cedulaKeyTyped

    private void txt_telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telefonoKeyTyped
        char c = evt.getKeyChar();

        if (Character.isISOControl(c)) {
            return;
        }
        if (!Character.isDigit(c)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Error: S√≥lo se permiten d√≠gitos en el tel√©fono.", "Car√°cter no v√°lido", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txt_telefono.getText().length() >= 10) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Error: El tel√©fono debe tener como m√°ximo 10 d√≠gitos.", "L√≠mite excedido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_telefonoKeyTyped

    private void txt_direccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_direccionKeyTyped
        ValidarCaracteres(evt);
    }//GEN-LAST:event_txt_direccionKeyTyped

    private void ValidarCaracteres(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();

        if (Character.isISOControl(c)) {
            return;
        }
        if (!Character.isLetter(c) && c != ' ') {
            evt.consume();
            JOptionPane.showMessageDialog(
                    null,
                    "Error: S√≥lo se permiten letras, tildes y espacios en este campo.",
                    "Car√°cter no v√°lido",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }

    public boolean validarFormulario() {
        boolean ok = true;
        LineBorder rojo = new LineBorder(Color.RED, 2);
        LineBorder negro = new LineBorder(Color.BLACK, 1);

        if (txt_nombre.getText().trim().isEmpty()) {
            txt_nombre.setBorder(rojo);
            ok = false;
        } else {
            txt_nombre.setBorder(negro);
        }

        if (txt_apellido.getText().trim().isEmpty()) {
            txt_apellido.setBorder(rojo);
            ok = false;
        } else {
            txt_apellido.setBorder(negro);
        }

        if (txt_cedula.getText().trim().isEmpty()) {
            txt_cedula.setBorder(rojo);
            ok = false;
        } else {
            txt_cedula.setBorder(negro);
        }

        if (txt_correo.getText().trim().isEmpty()) {
            txt_correo.setBorder(rojo);
            ok = false;
        } else {
            txt_correo.setBorder(negro);
        }

        if (txt_telefono.getText().trim().isEmpty()) {
            txt_telefono.setBorder(rojo);
            ok = false;
        } else {
            txt_telefono.setBorder(negro);
        }

        if (txt_fecha.getText().trim().isEmpty()) {
            txt_fecha.setBorder(rojo);
            ok = false;
        } else {
            txt_fecha.setBorder(negro);
        }

        return ok;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton butt_actualizar;
    private javax.swing.JButton butt_agregar;
    private javax.swing.JButton butt_eliminar;
    private javax.swing.JCheckBox checkBox_afilicacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JTable tbl_clientes;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_cedula;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
